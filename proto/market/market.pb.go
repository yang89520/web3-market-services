// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.19.4
// source: proto/market.proto

package market

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SupportAssetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerToken string                 `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	AssetName     string                 `protobuf:"bytes,2,opt,name=asset_name,json=assetName,proto3" json:"asset_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupportAssetRequest) Reset() {
	*x = SupportAssetRequest{}
	mi := &file_proto_market_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupportAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportAssetRequest) ProtoMessage() {}

func (x *SupportAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportAssetRequest.ProtoReflect.Descriptor instead.
func (*SupportAssetRequest) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{0}
}

func (x *SupportAssetRequest) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *SupportAssetRequest) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

type OfficialCoinRate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Rate          string                 `protobuf:"bytes,2,opt,name=rate,proto3" json:"rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OfficialCoinRate) Reset() {
	*x = OfficialCoinRate{}
	mi := &file_proto_market_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfficialCoinRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialCoinRate) ProtoMessage() {}

func (x *OfficialCoinRate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialCoinRate.ProtoReflect.Descriptor instead.
func (*OfficialCoinRate) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{1}
}

func (x *OfficialCoinRate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OfficialCoinRate) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

type MarketPrice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetName     string                 `protobuf:"bytes,1,opt,name=asset_name,json=assetName,proto3" json:"asset_name,omitempty"`
	AssetPrice    string                 `protobuf:"bytes,2,opt,name=asset_price,json=assetPrice,proto3" json:"asset_price,omitempty"`
	AssetVolume   string                 `protobuf:"bytes,3,opt,name=asset_volume,json=assetVolume,proto3" json:"asset_volume,omitempty"`
	AssetRate     string                 `protobuf:"bytes,4,opt,name=asset_rate,json=assetRate,proto3" json:"asset_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketPrice) Reset() {
	*x = MarketPrice{}
	mi := &file_proto_market_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketPrice) ProtoMessage() {}

func (x *MarketPrice) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketPrice.ProtoReflect.Descriptor instead.
func (*MarketPrice) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{2}
}

func (x *MarketPrice) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *MarketPrice) GetAssetPrice() string {
	if x != nil {
		return x.AssetPrice
	}
	return ""
}

func (x *MarketPrice) GetAssetVolume() string {
	if x != nil {
		return x.AssetVolume
	}
	return ""
}

func (x *MarketPrice) GetAssetRate() string {
	if x != nil {
		return x.AssetRate
	}
	return ""
}

type SupportAssetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReturnCode    uint64                 `protobuf:"varint,1,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	IsSupport     bool                   `protobuf:"varint,3,opt,name=isSupport,proto3" json:"isSupport,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupportAssetResponse) Reset() {
	*x = SupportAssetResponse{}
	mi := &file_proto_market_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupportAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportAssetResponse) ProtoMessage() {}

func (x *SupportAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportAssetResponse.ProtoReflect.Descriptor instead.
func (*SupportAssetResponse) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{3}
}

func (x *SupportAssetResponse) GetReturnCode() uint64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *SupportAssetResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SupportAssetResponse) GetIsSupport() bool {
	if x != nil {
		return x.IsSupport
	}
	return false
}

type MarketPriceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerToken string                 `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	AssetName     string                 `protobuf:"bytes,2,opt,name=asset_name,json=assetName,proto3" json:"asset_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketPriceRequest) Reset() {
	*x = MarketPriceRequest{}
	mi := &file_proto_market_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketPriceRequest) ProtoMessage() {}

func (x *MarketPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketPriceRequest.ProtoReflect.Descriptor instead.
func (*MarketPriceRequest) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{4}
}

func (x *MarketPriceRequest) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *MarketPriceRequest) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

type MarketPriceResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ReturnCode       uint64                 `protobuf:"varint,1,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	Message          string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MarketPrice      []*MarketPrice         `protobuf:"bytes,3,rep,name=market_price,json=marketPrice,proto3" json:"market_price,omitempty"`
	OfficialCoinRate []*MarketPriceRequest  `protobuf:"bytes,4,rep,name=official_coin_rate,json=officialCoinRate,proto3" json:"official_coin_rate,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MarketPriceResponse) Reset() {
	*x = MarketPriceResponse{}
	mi := &file_proto_market_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketPriceResponse) ProtoMessage() {}

func (x *MarketPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketPriceResponse.ProtoReflect.Descriptor instead.
func (*MarketPriceResponse) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{5}
}

func (x *MarketPriceResponse) GetReturnCode() uint64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *MarketPriceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MarketPriceResponse) GetMarketPrice() []*MarketPrice {
	if x != nil {
		return x.MarketPrice
	}
	return nil
}

func (x *MarketPriceResponse) GetOfficialCoinRate() []*MarketPriceRequest {
	if x != nil {
		return x.OfficialCoinRate
	}
	return nil
}

var File_proto_market_proto protoreflect.FileDescriptor

var file_proto_market_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x77, 0x65, 0x62, 0x33, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x22, 0x5b, 0x0a, 0x13, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a,
	0x0a, 0x10, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x0b, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x22, 0x6f, 0x0a, 0x14,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x5a, 0x0a,
	0x12, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x13, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0c,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x0b, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x10, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c,
	0x43, 0x6f, 0x69, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x32, 0xc1, 0x01, 0x0a, 0x0e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x0f, 0x67,
	0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x20,
	0x2e, 0x77, 0x65, 0x62, 0x33, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x2e, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x2e,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x21, 0x0a, 0x0f,
	0x78, 0x79, 0x7a, 0x2e, 0x77, 0x65, 0x62, 0x33, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5a,
	0x0e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_market_proto_rawDescOnce sync.Once
	file_proto_market_proto_rawDescData []byte
)

func file_proto_market_proto_rawDescGZIP() []byte {
	file_proto_market_proto_rawDescOnce.Do(func() {
		file_proto_market_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_market_proto_rawDesc), len(file_proto_market_proto_rawDesc)))
	})
	return file_proto_market_proto_rawDescData
}

var file_proto_market_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_market_proto_goTypes = []any{
	(*SupportAssetRequest)(nil),  // 0: web3.market.SupportAssetRequest
	(*OfficialCoinRate)(nil),     // 1: web3.market.OfficialCoinRate
	(*MarketPrice)(nil),          // 2: web3.market.MarketPrice
	(*SupportAssetResponse)(nil), // 3: web3.market.SupportAssetResponse
	(*MarketPriceRequest)(nil),   // 4: web3.market.MarketPriceRequest
	(*MarketPriceResponse)(nil),  // 5: web3.market.MarketPriceResponse
}
var file_proto_market_proto_depIdxs = []int32{
	2, // 0: web3.market.MarketPriceResponse.market_price:type_name -> web3.market.MarketPrice
	4, // 1: web3.market.MarketPriceResponse.official_coin_rate:type_name -> web3.market.MarketPriceRequest
	0, // 2: web3.market.MarketServices.getSupportAsset:input_type -> web3.market.SupportAssetRequest
	4, // 3: web3.market.MarketServices.getMarketPrice:input_type -> web3.market.MarketPriceRequest
	3, // 4: web3.market.MarketServices.getSupportAsset:output_type -> web3.market.SupportAssetResponse
	5, // 5: web3.market.MarketServices.getMarketPrice:output_type -> web3.market.MarketPriceResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_market_proto_init() }
func file_proto_market_proto_init() {
	if File_proto_market_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_market_proto_rawDesc), len(file_proto_market_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_market_proto_goTypes,
		DependencyIndexes: file_proto_market_proto_depIdxs,
		MessageInfos:      file_proto_market_proto_msgTypes,
	}.Build()
	File_proto_market_proto = out.File
	file_proto_market_proto_goTypes = nil
	file_proto_market_proto_depIdxs = nil
}
